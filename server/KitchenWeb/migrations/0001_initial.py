# Generated by Django 3.2.4 on 2021-08-09 08:34

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Additional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200, verbose_name='Дополнение к позиции')),
                ('sampling_order', models.IntegerField(verbose_name='Очередность при выборке')),
                ('base_price', models.IntegerField(verbose_name='Базовая цена')),
                ('extra_price', models.JSONField(blank=True, null=True, verbose_name='Дополнительная цена')),
            ],
            options={
                'verbose_name': 'Дополнение к позиции',
                'verbose_name_plural': 'Дополнения к позициям',
                'db_table': 'Additional',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.TextField(max_length=30, verbose_name='Category')),
                ('order', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Category Order')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'db_table': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Dish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Позиция')),
                ('description', models.TextField(max_length=500, verbose_name='Описание')),
                ('image', models.ImageField(blank=True, null=True, upload_to='uploads', verbose_name='Фото')),
                ('base_price', models.IntegerField(verbose_name='Базовая цена')),
                ('extra_price', models.JSONField(blank=True, null=True, verbose_name='Дополнительная цена')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='dish', to='KitchenWeb.category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Позиция',
                'verbose_name_plural': 'Позиции',
                'db_table': 'dishes',
            },
        ),
        migrations.CreateModel(
            name='Garnish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=250, verbose_name='Гарнир')),
                ('order', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Очередность')),
                ('base_price', models.IntegerField(verbose_name='Базовая цена')),
                ('extra_price', models.JSONField(blank=True, null=True, verbose_name='Дополнительная цена')),
            ],
            options={
                'verbose_name': 'Гарнир',
                'verbose_name_plural': 'Гарниры',
                'db_table': 'garnishes',
            },
        ),
        migrations.CreateModel(
            name='Offering',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('qty_portion', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('date', models.DateField(verbose_name='Дата')),
                ('additional', models.ManyToManyField(blank=True, null=True, related_name='offering_additional', to='KitchenWeb.Additional', verbose_name='Дополнения')),
                ('garnish', models.ManyToManyField(blank=True, null=True, related_name='offering_garnish', to='KitchenWeb.Garnish', verbose_name='Гарнир')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offering_position', to='KitchenWeb.dish', verbose_name='Позиция')),
            ],
            options={
                'verbose_name': 'Предложение по позиции',
                'verbose_name_plural': 'Предложения по позициям',
                'db_table': 'offerings',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
                'db_table': 'order',
            },
        ),
        migrations.CreateModel(
            name='Supplement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=300, verbose_name='Надбавка')),
                ('price', models.PositiveIntegerField(verbose_name='Цена за надбавку')),
            ],
            options={
                'verbose_name': 'Надбавка',
                'verbose_name_plural': 'Надбавки',
                'db_table': 'supplements',
            },
        ),
        migrations.CreateModel(
            name='OrderOffernig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('portions', models.JSONField(verbose_name='Порции')),
                ('price', models.IntegerField(default=0)),
                ('qty', models.IntegerField()),
                ('offering', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offering_o', to='KitchenWeb.offering', verbose_name='Предложение')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_o', to='KitchenWeb.order', verbose_name='Заказ')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='offering',
            field=models.ManyToManyField(related_name='order_offering', through='KitchenWeb.OrderOffernig', to='KitchenWeb.Offering', verbose_name='Предложение'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_user', to='accounts.employee', verbose_name='Пользователь'),
        ),
        migrations.AddField(
            model_name='offering',
            name='supplement',
            field=models.ManyToManyField(blank=True, null=True, related_name='offering_supplement', to='KitchenWeb.Supplement', verbose_name='Надбавка'),
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.IntegerField(default=1, verbose_name='Кол-во товара')),
                ('portions', models.JSONField(verbose_name='Порции')),
                ('is_confirmed', models.BooleanField(default=False)),
                ('price', models.IntegerField(default=0)),
                ('offering', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_offering', to='KitchenWeb.offering', verbose_name='Предложение')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_user', to='accounts.employee', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Корзина',
                'verbose_name_plural': 'Корзины',
                'db_table': 'basket',
            },
        ),
    ]
